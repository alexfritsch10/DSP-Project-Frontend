[{"/Users/teikaoru/dsp-project-frontend/src/reportWebVitals.js":"1","/Users/teikaoru/dsp-project-frontend/src/UploadForm.js":"2","/Users/teikaoru/dsp-project-frontend/src/validateJSONSchema.js":"3","/Users/teikaoru/dsp-project-frontend/src/App.js":"4","/Users/teikaoru/dsp-project-frontend/src/index.js":"5"},{"size":362,"mtime":1608586542597,"results":"6","hashOfConfig":"7"},{"size":3039,"mtime":1610156523962,"results":"8","hashOfConfig":"7"},{"size":5292,"mtime":1610131772847,"results":"9","hashOfConfig":"7"},{"size":2833,"mtime":1610156648950,"results":"10","hashOfConfig":"7"},{"size":616,"mtime":1610145922286,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lq8ctj",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/teikaoru/dsp-project-frontend/src/reportWebVitals.js",[],"/Users/teikaoru/dsp-project-frontend/src/UploadForm.js",["23"],"import React,{Component} from 'react';\nimport { validateJSONSchema } from './validateJSONSchema';\n\nclass UploadForm extends Component {\n\n\n    state = {\n        // Initially, no file is selected\n        selectedFile: null,\n        schemaValid: null,\n        schemaMessage: null,\n        display: 'block',\n    };\n\n    // On file select (from the pop up)\n    onFileChange = event => {\n\n        // Update the state\n        this.setState({ selectedFile: event.target.files[0] });\n\n    };\n\n    handleShow = (e) => {\n        if(this.state.display==\"content\") {this.setState({ display: 'none' });}\n        else  {this.setState({ display: 'content' });}\n    };\n\n\n    // On file upload (click the upload button)\n    onFileUpload = () => {\n\n        const reader = new FileReader();\n        reader.onload = async (file) => {\n            const text = (file.target.result);\n            const validity = validateJSONSchema(text);\n            console.log(validity.valid);\n            console.log(validity.message);\n            this.setState({ schemaValid: validity.valid });\n            this.setState({ schemaMessage: validity.message });\n\n        };\n        reader.readAsText(this.state.selectedFile);\n\n\n        // Request made to the backend api\n        // Send formData object\n        // axios.post(\"api/uploadfile\", formData);\n    };\n\n\n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n\n        if (this.state.selectedFile && !this.state.schemaMessage) {\n\n            return (\n                <div>\n                    <h2>File Details:</h2>\n                    <p>File Name: {this.state.selectedFile.name}</p>\n                    <p>File Type: {this.state.selectedFile.type}</p>\n                    <p>\n                        Last Modified:{\" \"}\n                        {this.state.selectedFile.lastModifiedDate.toDateString()}\n                    </p>\n                </div>\n            );\n        } else if(this.state.schemaMessage) {\n            return (\n                <div>\n                    <h2>Schema Details:</h2>\n                    <p>Schema Valid: {this.state.schemaValid.toString()}</p>\n                    <p>Message: {this.state.schemaMessage}</p>\n                </div>\n            );\n        }\n    };\n\n    render() {\n        return (\n            <div id={\"uploadFormContainer\"}>\n                <button className=\"dropbtn\" id={\"uploadButton\"} onClick={this.handleShow}>\n                    Click here to upload json file\n                </button>\n                <div id={\"test\"} style={{display: this.state.display}}>\n                <h3>\n                    Upload JSON File to deploy Fog infrastructure!\n                </h3>\n                <div>\n                    <input type=\"file\" onChange={this.onFileChange}/>\n                    <button onClick={this.onFileUpload}>\n                        Upload!\n                    </button>\n                </div>\n                </div>\n                {this.fileData()}\n            </div>\n        );\n    }\n}\nexport default UploadForm;","/Users/teikaoru/dsp-project-frontend/src/validateJSONSchema.js",[],"/Users/teikaoru/dsp-project-frontend/src/App.js",["24"],"/Users/teikaoru/dsp-project-frontend/src/index.js",[],{"ruleId":"25","severity":1,"message":"26","line":24,"column":30,"nodeType":"27","messageId":"28","endLine":24,"endColumn":32},{"ruleId":"29","severity":1,"message":"30","line":6,"column":8,"nodeType":"31","messageId":"32","endLine":6,"endColumn":16},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar"]